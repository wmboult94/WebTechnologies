{
  "_args": [
    [
      {
        "raw": "jquery.panzoom",
        "scope": null,
        "escapedName": "jquery.panzoom",
        "name": "jquery.panzoom",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/warrenboult/Documents/UNI/webtech/coursework/site"
    ]
  ],
  "_from": "jquery.panzoom@latest",
  "_id": "jquery.panzoom@3.2.2",
  "_inCache": true,
  "_location": "/jquery.panzoom",
  "_nodeVersion": "0.10.46",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/jquery.panzoom-3.2.2.tgz_1472348265616_0.2878722841851413"
  },
  "_npmUser": {
    "name": "timmywil",
    "email": "timmywillisn@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jquery.panzoom",
    "scope": null,
    "escapedName": "jquery.panzoom",
    "name": "jquery.panzoom",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/jquery.panzoom/-/jquery.panzoom-3.2.2.tgz",
  "_shasum": "b41940f5079195be504073b677d8c548f47ece8a",
  "_shrinkwrap": null,
  "_spec": "jquery.panzoom",
  "_where": "/Users/warrenboult/Documents/UNI/webtech/coursework/site",
  "author": {
    "name": "Timmy Willison",
    "email": "timmywillisn@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/timmywil/jquery.panzoom/issues"
  },
  "dependencies": {},
  "description": "A jQuery plugin to pan and/or zoom elements using CSS3",
  "devDependencies": {
    "grunt": "^1.0.1",
    "grunt-bowercopy": "^1.2.4",
    "grunt-compare-size": "^0.4.2",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-jsonlint": "^1.1.0",
    "grunt-mocha": "^1.0.2",
    "gzip-js": "~0.3.2",
    "load-grunt-tasks": "^3.5.0",
    "lodash": "^4.13.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b41940f5079195be504073b677d8c548f47ece8a",
    "tarball": "https://registry.npmjs.org/jquery.panzoom/-/jquery.panzoom-3.2.2.tgz"
  },
  "files": [
    "MIT-License.txt",
    "dist/jquery.panzoom.js",
    "dist/jquery.panzoom.min.js"
  ],
  "gitHead": "3ab50468592eb46776b7a3331adea240cefdea3b",
  "homepage": "https://github.com/timmywil/jquery.panzoom#readme",
  "keywords": [
    "jquery",
    "panzoom",
    "pan",
    "zoom",
    "draggable",
    "dragging",
    "drag"
  ],
  "license": "MIT",
  "main": "dist/jquery.panzoom.js",
  "maintainers": [
    {
      "name": "timmywil",
      "email": "timmywillisn@gmail.com"
    }
  ],
  "name": "jquery.panzoom",
  "optionalDependencies": {},
  "readme": "# jQuery Panzoom\n\n[![Build Status](https://travis-ci.org/timmywil/jquery.panzoom.png?branch=master)](https://travis-ci.org/timmywil/jquery.panzoom)\n\nPanzoom is a progressive plugin to create panning and zooming functionality for an element.\nRather than setting width and height on an image tag, Panzoom uses CSS transforms and matrix functions to take advantage of hardware/GPU acceleration in the browser, which means the element can be _anything_: an image, a video, an iframe, a canvas, text, WHATEVER.\n\njquery.panzoom.min.js (12.5kb/4.6kb gzip), included in this repo, is compressed with [uglifyjs](https://github.com/mishoo/UglifyJS).\n\nFor common support questions, see [the FAQ](https://github.com/timmywil/jquery.panzoom#faq) at the bottom.\n\n## Dependencies\n\njquery.panzoom prefers jQuery 3.0.0+, but works with jQuery 1.9.0+ and jQuery 2.0.0+. jquery.panzoom supports IE9+.\n\n## Mobile support\n\nPanzoom includes support for touch gestures and even supports __pinch gestures__ for zooming.\nIt is perfectly suited for both mobile and desktop browsers.\nYou'll be amazed at how well this performs on your mobile device.\n\niOS and Android are supported.\n\n**Pointer (IE 10+)**, **touch**, and **mouse** events are supported.\n\n## SVG support\n\nPanzoom supports panning and zooming SVG elements directly, in browsers that support SVG.\n\nIn IE9-11 and Edge 13-14+, CSS animations/transitions do not work on SVG elements, at least for the transform style. They do work in other browsers.\n\nOne could implement transitions manually in those browsers by overriding the `setTransform()` method and integrating a tweening library for javascript animations (such as [tween.js](http://www.createjs.com/#!/TweenJS)).\n\n**Compatibility note:** *There is a [known issue with Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=530985) and using the `focal` option. Firefox does not correctly maintain the dimensions of SVG parent elements, which throws off offsets. If using the `focal` option with SVG, the workaround is to set the correct offset on the Panzoom instance manually using `Panzoom.prototype.parentOffset` ([example](http://jsfiddle.net/timmywil/Vu8nA/)).*\n\n## Loading Panzoom\nPanzoom can be included with your scripts at the end of the body,\nbut Panzoom supports AMD for javascript module love.\n\nWith script tags:\n\n```html\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\n<script src=\"/js/plugins/jquery.panzoom.js\"></script>\n```\n\nWith AMD loader in an anonymous module:\n\n```js\ndefine([ \"jquery\", \"plugins/jquery.panzoom\" ], function( $ ) {\n  $(document).ready(function() {\n    $(\".panzoom-elements\").panzoom();\n  });\n});\n```\n\n## Initialization\n\n```js\n$(\".panzoom-elements\").panzoom();\n\n// Pass options\n$(\"a.panzoom-elements\").panzoom({\n  minScale: 0,\n  $zoomRange: $(\"input[type='range']\")\n});\n```\n\n## Options\n\nAll options can be overridden by passing an object literal like any other plugin,<br>\nor with the `\"option\"` method.<br>\n\nCheck out the demos of the [contain](http://timmywil.github.io/jquery.panzoom/demo/#contain) and [inverted containment](http://timmywil.github.io/jquery.panzoom/demo/#inverted-contain) options.\n\n```js\nPanzoom.defaults = {\n  // Should always be non-empty\n  // Used to bind jQuery events without collisions\n  // A guid is not added here as different instantiations/versions of Panzoom\n  // on the same element is not supported.\n  eventNamespace: \".panzoom\",\n\n  // Whether or not to transition the scale\n  transition: true,\n\n  // Default cursor style for the element\n  cursor: \"move\",\n\n  // There may be some use cases for zooming without panning or vice versa\n  // NOTE: disablePan also disables focal point zooming\n  disablePan: false,\n  disableZoom: false,\n\n  // Pan only on the X or Y axes\n  disableXAxis: false,\n  disableYAxis: false,\n\n  // Set whether you'd like to pan on left (1), middle (2), or right click (3)\n  which: 1,\n\n  // The increment at which to zoom\n  // adds/subtracts to the scale each time zoomIn/Out is called\n  increment: 0.3,\n\n  // Turns on exponential zooming\n  // If false, zooming will be incremented linearly\n  exponential: true,\n\n  // Pan only when the scale is greater than minScale\n  panOnlyWhenZoomed: false,\n\n  // min and max zoom scales\n  minScale: 0.4,\n  maxScale: 5,\n\n  // The default step for the range input\n  // Precendence: default < HTML attribute < option setting\n  rangeStep: 0.05,\n\n  // Animation duration (ms)\n  duration: 200,\n  // CSS easing used for scale transition\n  easing: \"ease-in-out\",\n\n  // Indicate that the element should be contained within its parent when panning\n  // Note: this does not affect zooming outside of the parent\n  // Set this value to 'invert' to only allow panning outside of the parent element (the opposite of the normal use of contain)\n  // 'invert' is useful for a large Panzoom element where you don't want to show anything behind it\n  contain: false,\n\n  // Transform value to which to always reset (string)\n  // Defaults to the original transform on the element when Panzoom is initialized\n  startTransform: undefined,\n\n  // This optional jQuery collection can be set to specify all of the elements\n  // on which the transform should always be set.\n  // It should have at least one element.\n  // This is mainly used for delegating the pan and zoom transform settings\n  // to another element or multiple elements.\n  // The default is the Panzoom element wrapped in jQuery\n  // See the [demo](http://timmywil.github.io/jquery.panzoom/demo/#set) for an example.\n  // Note: only one Panzoom element will still handle events for a Panzoom instance.\n  // Use multiple Panzoom instances for that use case.\n  $set: $elem,\n\n  // Zoom buttons/links collection (you can also bind these yourself - e.g. `$button.on(\"click\", function( e ) { e.preventDefault(); $elem.panzoom(\"zoom\"); });` )\n  $zoomIn: $(),\n  $zoomOut: $(),\n  // Range input on which to bind zooming functionality\n  $zoomRange: $(),\n  // Reset buttons/links collection on which to bind the reset method\n  $reset: $(),\n  // For convenience, these options will be bound to Panzoom events\n  // These can all be bound normally on the Panzoom element\n  // e.g. `$elem.on(\"panzoomend\", function( e, panzoom ) { console.log( panzoom.getMatrix() ); });`\n  onStart: undefined,\n  onChange: undefined,\n  onZoom: undefined,\n  onPan: undefined,\n  onEnd: undefined,\n  onReset: undefined\n};\n```\n\n## Methods\n\nMethods can be called in the same way as a widget from the jQuery UI widget factory. Pass a method name when calling `panzoom()`. Strings are interpreted as method names.\n\n### `option()`\n\n```js\n// One at a time\n// Sets the scale increment option\n$elem.panzoom(\"option\", \"increment\", 0.4);\n\n// Several options at once\n$elem.panzoom(\"option\", {\n  increment: 0.4,\n  minScale: 0.1,\n  maxScale: 2,\n  duration: 500,\n  $reset: $(\"a.reset-panzoom, button.reset-panzoom\")\n});\n```\n\nAny option can be changed. See the defaults above for a list.\n\n### `reset( [options] )`\n\n__Arguments__\n\n  1. `options` _{Object|Boolean}_: If a boolean is passed, animate the reset (default: true). If an options object is passed, pass that along to setMatrix.\n  2. `options.silent` _{Boolean}_: Silence the reset event (as well as the change event as the same options are passed to setMatrix)\n\n```js\n$elem.panzoom(\"reset\");\n$elem.panzoom(\"reset\", false);\n$elem.panzoom(\"reset\", {\n  animate: false,\n  contain: false\n});\n```\n\nReset the transform matrix to its original value. All panning and zooming is reset.\n\n### `resetZoom( [options] )`\n\n__Arguments__\n\n  1. `options` _{Object|Boolean}_: If a boolean is passed, animate the reset (default: true). If an options object is passed, pass that along to zoom.\n\n```js\n$elem.panzoom(\"resetZoom\");\n$elem.panzoom(\"resetZoom\", false);\n$elem.panzoom(\"resetZoom\", {\n  animate: false,\n  silent: true\n});\n```\n\nReset the scale to its original value (resets both scale values in the matrix to their original values).\n\n### `resetPan( [options] )`\n\n__Arguments__\n\n  1. `options` _{Object|Boolean}_: If a boolean is passed, animate the reset (default: true). If an options object is passed, pass that along to pan.\n\n```js\n$elem.panzoom(\"resetPan\");\n$elem.panzoom(\"resetPan\", false);\n$elem.panzoom(\"resetPan\", {\n  animate: false,\n  silent: true\n});\n```\n\nReset the pan to its original value.\n\n### `pan( x, y[, options] )`\n\n__Arguments__\n\n  1. `x` _{Number}_: The translation X value to set\n  2. `y` _{Number}_: The translation Y value to set\n  3. `options` _{Object}_: These options are also passed along to [setMatrix](#setmatrix-matrix-options-).\n\n    1. `options.matrix` _{Array}_: The matrix being manipulated (If this is not passed, the matrix will be calculated on every call to pan, which could be a performance bottleneck if this is bound to a move event)\n    2. `options.silent` _{Boolean}_: Silence the pan event. Note that this will also silence the setMatrix change event.\n    3. `options.relative` _{Boolean}_: Make the x and y values relative to the existing matrix.<br/>\n      e.g. `$elem.panzoom(\"pan\", 10, -10, { relative: true });`<br/>\n      `// => Moves the element 10 pixels right and 10 pixels up from its current position`\n\n### `zoom( [scale[, opts]] )`\n\n__Arguments__\n\n  1. `scale` _{Number|Boolean}_: The exact scale to which to zoom or a boolean indicating to transition a zoom out\n  2. `opts` _{Object}_: All global options can be overwritten by this options object. For example, override the default increment.\n\n    1. `opts.noSetRange` _{Boolean}_: Specify that the method should not set the $zoomRange value (as is the case when $zoomRange is calling zoom on change)\n    2. `opts.animate` _{Boolean}_: Whether to animate the zoom (defaults to true if scale is not a number, false otherwise)\n    3. `opts.focal` _{jQuery.Event|Object}_: Specify a focal point under which to freeze the zooming element.<br/>\n      Should either be a jQuery event or an object containing clientX/clientY to specify the point's position relative to the parent.<br/>\n      For an example of focal point zooming, use the mousewheel or pinch to zoom on the [demo](http://timmywil.github.io/jquery.panzoom/demo/#focal).\n    4. `opts.silent` _{Boolean}_: Silence the zoom event\n    5. `opts.dValue` _{Number}_: Think of a transform matrix as four values a, b, c, d<br/>\n      where a/d are the horizontal/vertical scale values and b/c are the skew values<br/>\n      (5 and 6 of matrix array are the tx/ty transform values).<br/>\n      Normally, the scale is set to both the a and d values of the matrix.<br/>\n      This option allows you to specify a different d value for the zoom.<br/>\n      For instance, to flip vertically, you could set -1 as the dValue.\n\n```js\n// Transition a zoom in based on the scale increment, min and max values\n$elem.panzoom(\"zoom\");\n\n// Transition a zoom out\n$elem.panzoom(\"zoom\", true);\n\n// Set the scale immediately without a transition\n// and silence the zoom event\n$elem.panzoom(\"zoom\", 1.2, { silent: true });\n```\n\nTransition a zoom in based on the scale increment, min and max values, and animation duration and easing. This method handles both zooming in and zooming out.<br>\nIf the method is passed a number, `zoom()` will immediately set that scale without transitioning. This is mostly useful for the range input and pinch gestures.<br>\nIf the method is passed a boolean, true will indicate to perform a zoom-out based on the increment specified in options. If false (or omitted), a zoom-in will be performed.\n\n### `resetDimensions()`\n\n```js\n// Indicate to Panzoom that the dimensions of the parent and/or the element have changed.\n$elem.panzoom(\"resetDimensions\");\n```\n\nPanzoom caches the dimensions of the Panzoom element and its parent to cater to quick move events.\nWhenever these dimensions change, it is necessary to call `resetDimensions()`.\nHowever, as of version 3.1.0, this is no longer required.\n\n### `disable()`\n\n```js\n$elem.panzoom(\"disable\");\n```\n\nQuickly disable Panzoom on the element.\n\n### `enable()`\n\n```js\n$elem.panzoom(\"enable\");\n```\n\nRe-enable Panzoom on the element (re-binds all events).\n\n### `isDisabled()`\n\n```js\n$elem.panzoom(\"isDisabled\");\n// => true\n```\n\nReturns a boolean indicating whether the current Panzoom instance is disabled.\n\n### `isPanning()`\n\nReturns a boolean indicating whether the element is currently panning.\n\n### `destroy()`\n\n```js\n$elem.panzoom(\"destroy\");\n```\n\n### `instance()`\n\n```js\nvar panzoom = $elem.panzoom(\"instance\");\n```\n\nRetrieves the Panzoom instance(s) from the set. If there are multiple elements in the set, you will get an array of instances. If there is only one, you will get that instance of Panzoom.\n\nUnbinds all events and removes all data, including the Panzoom instance on the element.\n\n## Internal\n\nThese methods are _basically_ private, but could be useful under certain circumstances.\n\n### `getTransform()`\n\nReturns the string transform value used by Panzoom for the element.\n\n__Note__: The transform attribute is used for SVG. Otherwise, the appropriately prefixed transform style property is used.\n\n### `setTransform()`\n\nSet a string transform value on the Panzoom element (or the $set if using the $set option).\n\n__Note__: The transform attribute is used for SVG. Otherwise, the appropriately prefixed transform style property is used.\n\n### `getMatrix( [transform] )`\n\nRetrieve an array of values for the specified transform or for the current transform on the Panzoom element.\n\n```js\n$elem.panzoom(\"getMatrix\");\n// => [1, 0, 0, 1, 0, 0]\n```\n\n### `setMatrix( matrix[, options] )`\n\n__Arguments__\n\n  1. `matrix` _{Array}_: Matrix to set\n  2. `options` _{Object}_\n\n    1. `options.animate` _{Boolean}_: If true, a transition will be set to animate the transform change\n    2. `options.contain` _{Boolean}_: Override the global contain option\n    3. `options.range` _{Boolean}_: If true, $zoomRange's value will be updated.\n    4. `options.silent` _{Boolean}_: If true, the change event will not be triggered\n\n\n```js\n// Flip the element upside down\n$elem.panzoom(\"setMatrix\", [ 1, 0, 0, -1, 0, 0 ]);\n```\n\nSets the transform matrix of the Panzoom element. It accepts the matrix as an array.\n\n_Note_: `setMatrix()` does not chain. It returns the newly-set matrix as an _Array_.\n\n### `transition( [off] )`\n\n```js\n$elem.panzoom(\"transition\");\n// Turn off transition\n$elem.panzoom(\"transition\", true);\n// Note: this is different than...\n$elem.panzoom(\"option\", \"transition\", true);\n// ... which sets the `transition` option, indicating whether transitioning is allowed at all.\n// If the transition option is false, `$elem.panzoom(\"transition\")` will only ever set transition to \"none\".\n```\n\nApplies the transition to the element. If `off` is true, it removes the transition.\n\n## Static properties\n\nStatic properties are there for convenience, but are **subject to change in future versions**.\n\n### `Panzoom.rmatrix`\nType: *RegExp*\n\nThis is a copy of the regex used by Panzoom to parse tranformation matrices.\n\n## Events\n\n### `\"panzoomstart\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `event` _(jQuery.Event)_: The starting mousedown or touchstart event\n  4. `touches` _(TouchList)_: The touches list if present\n\nFired when the user starts a move or pinch zoom gesture on mobile.\n\n### `\"panzoomchange\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `transform` _(Array)_: The transform matrix set during the change as an array of values\n\nFired whenever the matrix is changed by `setMatrix()` (whether internally or externally).\n\n_Try not to put to much in this event as it could slow down dragging._\n\n__Note__: This event can be silenced when setMatrix is called directly.\n\n### `\"panzoomzoom\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `scale` _(Number)_: The zoom scale set by the plugin\n  4. `opts` _(Object)_: Same options passed to zoom\n\nFired whenever the zoom is changed by this plugin.\n\n__Note__: This event can be silenced when zoom is called directly.\n\n### `\"panzoompan\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `x` _(Number)_: The resulting translateX value set on the matrix (accounting for the relative option)\n  4. `y` _(Number)_: The resulting translateY value set on the matrix\n\nFired whenever the pan is changed by this plugin.\n\n_Try not to put to much in this event as it could slow down dragging._\n\n### `\"panzoomend\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `matrix` _(Array)_: The final transform matrix\n  4. `changed` _(Boolean)_: Whether the matrix changed during the Panzoom event\n\nThis event is fired when the user finishes a move or finishes a pinch zoom gesture on mobile. All properties from the original click or touch event that ended the Panzoom transaction are passed through, including the event target (`e.target`).\n\n*Note*: When binding to this event, you can tell the difference between a click (or tap) and a move by checking `changed`:\n\n```js\n$panzoom.on('panzoomend', function(e, panzoom, matrix, changed) {\n  if (changed) {\n    // deal with drags or touch moves\n  } else {\n    // deal with clicks or taps\n  }\n});\n```\n\n### `\"panzoomreset\"`\n\n__Arguments Received__\n\n  1. `e` _(jQuery.Event)_: jQuery event object\n  2. `panzoom` _(Panzoom)_: The Panzoom instance\n  3. `matrix` _(Array)_: The original matrix\n\nFired whenever reset is called.\n\n## Testing\n\nTests can be run by opening [test/index.html](http://timmywil.github.io/jquery.panzoom/test/) in a browser or by using [`grunt`](http://gruntjs.com/) and [phantomjs](http://phantomjs.org/).\n\nTests are written with [mocha](http://visionmedia.github.com/mocha/) and [chai for bdd-style assertions](http://chaijs.com/api/bdd/).\n\nSee [CONTRIBUTING.md](https://github.com/timmywil/jquery.panzoom/blob/master/CONTRIBUTING.md) for more info.\n\n\n## FAQ\n\n1\\. How do I make it so that I never see the background behind the Panzoom element? [example](http://codepen.io/timmywil/pen/qjvBF)\n\n  - This can be done with the `contain` option. Set `contain` to `\"invert\"` or `\"automatic\"` and make sure the Panzoom element is the same size or larger than its parent.\n\n```js\n  $('.panzoom-elements').panzoom({\n    contain: 'invert',\n    minScale: 1\n  });\n```\n\n2\\. How do I make links work if they're within a Panzoom element? [example](http://codepen.io/timmywil/pen/bFiqy)\n\n  - Event propagation is stopped for `mousedown` and `touchstart` events in order to allow for Panzoom elements within Panzoom elements. To fix the links, bind an event handler that prevents the event from reaching the Panzoom handler:\n\n```js\n$('.panzoom a').on('mousedown touchstart', function( e ) {\n  e.stopImmediatePropagation();\n});\n```\n\n3\\. What is `transform-origin` and why is it added to the panzoom element?\n\n  - The `transform-origin` is the origin from which transforms are applied. Panzoom ensures the defaults are set to what it expects to calculate focal points and containment.\n  - HTML elements default to '50% 50%'.\n  - SVG elements default to '0 0'.\n\n4\\. How do I prevent zooming beyond the image's original size?\n\n - The `maxScale` option can be set using the image's `naturalWidth` divided by the `clientWidth`:\n\n```js\n$('#large-image').panzoom({\n    maxScale: elem.naturalWidth / elem.clientWidth\n});\n```\n\n5\\. I am using Panzoom with an `<object>` tag. It zooms but does not pan. [example](http://codepen.io/timmywil/pen/qNpykA)\n\nObject elements can eat up events, making it so they never reach Panzoom. To fix this, disable pointer events on the object tag and call Panzoom using a wrapper.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timmywil/jquery.panzoom.git"
  },
  "scripts": {
    "build": "grunt dev",
    "test": "grunt test"
  },
  "version": "3.2.2"
}
